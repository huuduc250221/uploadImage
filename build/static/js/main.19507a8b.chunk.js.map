{"version":3,"sources":["image.svg","component/DragAndDrop.js","component/UpLoad.js","component/Loading.js","component/upLoaded.js","component/container.js","App.js","reportWebVitals.js","index.js"],"names":["upload","dropRef","useRef","useState","dragCount","setDragcount","setIsImage","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dataTransfer","items","type","match","handleDragOut","state","handleDrop","files","length","clearData","useEffect","div","current","addEventListener","removeEventListener","className","ref","src","dropImage","alt","width","height","setIsLoading","setImgURL","file","console","log","formData","FormData","append","axios","post","then","res","data","catch","err","DragAndDrop","encType","style","display","id","name","accept","onChange","image","target","htmlFor","imgURL","textAreaRef","marginBottom","defaultValue","onClick","select","document","execCommand","isLoading","Loading","UpLoad","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19507a8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.3710b8a3.svg\";","import React, { useRef, useState ,useEffect} from 'react'\r\nimport dropImage from '../image.svg'\r\n\r\nexport default function ({ upload }) {\r\n\r\n    const dropRef = useRef('')\r\n    const [dragCount, setDragcount] = useState(0)\r\n    const [isImage, setIsImage] = useState(false)\r\n\r\n    function handleDrag(e) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    function handleDragIn(e) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setDragcount(dragCount + 1)\r\n        setIsImage(e.dataTransfer.items && e.dataTransfer.items[0].type.match(/image.*/));\r\n    }\r\n\r\n    function handleDragOut(e) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setDragcount((state) => {\r\n            state === 1 && setIsImage(false);\r\n            return state - 1;\r\n        });\r\n    }\r\n\r\n    function handleDrop(e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsImage(false);\r\n        setDragcount(0);\r\n        if (\r\n            e.dataTransfer.files &&\r\n            e.dataTransfer.files.length > 0 &&\r\n            e.dataTransfer.files[0].type.match(/image.*/)\r\n        ) {\r\n            upload && upload(e.dataTransfer.files[0]);\r\n            e.dataTransfer.clearData();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let div = dropRef.current;\r\n        div.addEventListener(\"dragenter\", handleDragIn);\r\n        div.addEventListener(\"dragleave\", handleDragOut);\r\n        div.addEventListener(\"dragover\", handleDrag);\r\n        div.addEventListener(\"drop\", handleDrop);\r\n\r\n        return () => {\r\n            // Clean up\r\n            div.removeEventListener(\"dragenter\", handleDragIn);\r\n            div.removeEventListener(\"dragleave\", handleDragOut);\r\n            div.removeEventListener(\"dragover\", handleDrag);\r\n            div.removeEventListener(\"drop\", handleDrop);\r\n        };\r\n    }, []);\r\n\r\n    return <div className=\"drag-drop\" ref={dropRef}>\r\n        <img src={dropImage} alt='day la anh' width='40%' height='auto'/>\r\n        <span>Drag & Drop image here</span>\r\n    </div>\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport DragAndDrop from './DragAndDrop'\r\n\r\nexport default function ({ setIsLoading, setImgURL }) {\r\n\r\n\r\n\r\n  function upload(file) {\r\n    console.log(file)\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    axios.post('/uploads', formData)\r\n      .then(res => {\r\n        setIsLoading(false)\r\n        setImgURL(res.data)\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n\r\n  }\r\n  const handleChange = e => {\r\n    setIsLoading(true);\r\n    const image = e.target.files[0];\r\n    console.log(image)\r\n    upload(image)\r\n  };\r\n  return <>\r\n    <div >\r\n      <h3>Upload your image</h3>\r\n      <p>File should be jpeg,png...</p>\r\n    </div>\r\n    <DragAndDrop upload={upload} />\r\n    <h5>Or</h5>\r\n    <form encType='multipart/form-data'>\r\n      <input\r\n        style={{ display: 'none' }}\r\n        type='file' id='upImage' name='upLoadImage' accept='image/*' onChange={handleChange} />\r\n      <label htmlFor='upImage'>choose an image</label>\r\n    </form>\r\n  </>\r\n}","import React from 'react'\r\n\r\nexport default function () {\r\n\r\n    \r\n    return <>\r\n        <h1>Loading...</h1>\r\n    </>\r\n}","import React, { useRef } from 'react'\r\n\r\nexport default function({setIsLoading,imgURL}) {\r\n    const textAreaRef = useRef('')\r\n    const onClickToCopy = () => {\r\n        textAreaRef.current.select()\r\n        document.execCommand('copy')\r\n    }\r\n\r\n    return <>\r\n        <h4>Upload success</h4>\r\n        <img src={imgURL} width='80%' height='auto'/>\r\n    <form style={{marginBottom:'20px'}}>\r\n        <input id='imageLink' type='text' ref={textAreaRef} defaultValue={imgURL} />\r\n        <label  className='noround' htmlFor='imageLink' onClick={onClickToCopy} >Copy</label>\r\n    </form>\r\n    </>\r\n} ","import React, { useState } from 'react'\r\n\r\nimport UpLoad from './UpLoad'\r\nimport Loading from './Loading'\r\nimport UpLoaded from './upLoaded'\r\n\r\nexport default function () {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [imgURL, setImgURL] = useState(null)\r\n\r\n    return <div className='container-box'>\r\n        {isLoading ? <Loading /> :\r\n            imgURL ?\r\n                <UpLoaded setIsLoading={setIsLoading} imgURL={imgURL} /> :\r\n                <UpLoad setIsLoading={setIsLoading} setImgURL={setImgURL} />}\r\n    </div>\r\n}","\nimport './App.css';\nimport Container from './component/container'\n\n\nfunction App() {\n  return <>\n    <Container />\n  </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}